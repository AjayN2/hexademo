# Workshop material - Day #2 - MySQL Workbench/Cli/Curl/Browser to interact w/ application

  * Open MySQL Workbench
  * Open the localhost connection
    * Mac OS: `export PATH=$PATH:/Applications/MySQLWorkbench.app/Contents/MacOS` and then you can use the command line `mysql -u root -phexawareftpdev`
  * `CREATE DATABASE MLPXX;` and click the lightning button
  * `CREATE USER 'MLPXX'@'localhost' IDENTIFIED BY 'MLPXX';`
  * `GRANT ALL ON MLPXX.* TO 'MLPXX'@'localhost';`
  * Open database/database.ddl in VS code
  * Copy the entire contents to MySQL Workbench
  * Execute the ddl 
  * Click the table icon against the MENU table in the right-hand side schemas section
  * Open database/database.dml in VS code
  * Copy the contents to MySQL Workbench
  * Execute the dml 
  * Click the table icon against the MENU table in the right-hand side schemas section. You should see the data just inserted.
  * Play around with
    * SELECT with predicates
    * UPDATE statements with predicates
    * DELETE statements with predicates
    * At the end of all the playing around, leave the database with 5 records with ids (101,102..
    
  * Next, we will build and run the java code
  * go to gitbash, ensure you are in workspace/MLPXX
  * `cd restservice/canteenmanagement`
  * `mvn compile`
  * `mvn exec:java -Dexec.mainClass=com.hexaware.MLPXX.util.CliMain`
    * As expected, the cli displays only the food id for the MENU; we need to do some code changes before the other attributes 
    * such as name will start appearing in the cli. But before that we will test the application as a REST service.
    * Due to a bug in the database connection code, after exiting, there will be an error with a stack trace. Ignore this error.
  * Build the war file as follows:
    * `mvn package` -- This build a war (java web archive with the code for the REST service)
    * `cp target/MLPXX-0.0.1-SNAPSHOT.war /D/FTP/apache-tomcat-8.5.16-windows-x64/apache-tomcat-8.5.16/webapps/MLPXX.war`
    * start tomcat and tail its logs
      * `cd D/FTP/apache-tomcat-8.5.16-windows-x64/apache-tomcat-8.5.16`
      * `rm -rf logs/*`
      * `./bin/startup.sh`
      * `tail -f logs/*`
      * `curl -vvv http://localhost:8080/MLPXX/api/menu`
      * `cd ../../webui/lmApp/`
   * `npm install`
   * `ng serve`
   * Notice that the tail terminal shows that the new version of the web application archive is now getting deployed
   * Open Chrome browser and navigate to http://localhost:4200
   * You should be able to see the Menu ids, food names and vendor ids  as you have entered them in the local mysql database